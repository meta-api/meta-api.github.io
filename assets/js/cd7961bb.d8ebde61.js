"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[4703],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(h,i(i({ref:n},p),{},{components:t})):r.createElement(h,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8745:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={id:"axios-graphql",title:"Integrate GraphQL with axios"},l=void 0,c={unversionedId:"advanced/graphql-connection/axios-graphql",id:"advanced/graphql-connection/axios-graphql",title:"Integrate GraphQL with axios",description:"Why using GraphQL with axios",source:"@site/docs/advanced/graphql-connection/2-axios-graphql.md",sourceDirName:"advanced/graphql-connection",slug:"/advanced/graphql-connection/axios-graphql",permalink:"/docs/advanced/graphql-connection/axios-graphql",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"axios-graphql",title:"Integrate GraphQL with axios"},sidebar:"mySidebar",previous:{title:"Use a connector for graphQL",permalink:"/docs/advanced/graphql-connection/graphql-connector"},next:{title:"Static IP addresses for a Spell",permalink:"/docs/advanced/static-ip-address"}},p={},u=[{value:"Why using GraphQL with axios",id:"why-using-graphql-with-axios",level:2},{value:"Integrate a GraphQL API with axios",id:"integrate-a-graphql-api-with-axios",level:2}],d={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"why-using-graphql-with-axios"},"Why using GraphQL with axios"),(0,o.kt)("p",null,"Using axios to a GraphQL is the fastest way to integrate a GraphQL API inside your Spell."),(0,o.kt)("p",null,"However, you'll lose some Meta API features, so we recommend you to integrate your ",(0,o.kt)("a",{parentName:"p",href:"/docs/advanced/graphql-connection/graphql-connector"},"GraphQL API using a connector"),"."),(0,o.kt)("h2",{id:"integrate-a-graphql-api-with-axios"},"Integrate a GraphQL API with axios"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"axios")," library is already added to your Spell, so you can call it directly like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const myRequest = await axios({\n  method: "POST",\n  url: "https://myserver.com/graphql",\n  headers: {\n    apikey: "test123",\n  },\n  data: {\n    query,\n    operationName: "PostPageCommentVotersComponent",\n    variables: { id: post_id },\n  },\n});\n')),(0,o.kt)("p",null,"You'll have to manage manually your authentication using headers or query parameters (refer to your vendor's API)."),(0,o.kt)("p",null,"To make you code more readable, you can define your ",(0,o.kt)("inlineCode",{parentName:"p"},"query")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"mutation")," request outside the axios configuration, like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const query = `\nquery PostPageCommentVotersComponent($id:ID) {\n    post(id:$id){\n        id\n        name\n        url\n        comments {\n            totalCount\n            edges {\n                cursor\n                node {\n                    body\n                    parentId\n                    url\n                    user {\n                        name\n                        username\n                        url\n                        profileImage\n                        followers {\n                            totalCount\n                        }\n                    }\n                    replies {\n                        totalCount\n                    }\n                }\n            }\n        }\n        votes {\n            totalCount\n        }\n    }\n}`;\n\nconst myRequest = await axios({\n  method: "POST",\n  url: "https://myserver.com/graphql",\n  headers: {\n    apikey: "test123",\n  },\n  data: {\n    query,\n    operationName: "PostPageCommentVotersComponent",\n    variables: { id: post_id },\n  },,\n});\n\nconsole.log(myRequest.data);\n')))}m.isMDXComponent=!0}}]);