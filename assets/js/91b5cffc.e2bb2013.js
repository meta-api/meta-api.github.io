"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[4080],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),h=l(n),m=r,d=h["".concat(c,".").concat(m)]||h[m]||p[m]||o;return n?a.createElement(d,i(i({ref:t},s),{},{components:n})):a.createElement(d,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1045:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],u={id:"advanced-oauth-config",title:"Advanced OAuth configuration"},c=void 0,l={unversionedId:"api-authentication/oauth2/advanced-oauth-config",id:"api-authentication/oauth2/advanced-oauth-config",title:"Advanced OAuth configuration",description:"For some APIs, their implementation of OAuth wasn't very standard...",source:"@site/docs/api-authentication/oauth2/4-advanced-oauth-config.md",sourceDirName:"api-authentication/oauth2",slug:"/api-authentication/oauth2/advanced-oauth-config",permalink:"/docs/api-authentication/oauth2/advanced-oauth-config",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"advanced-oauth-config",title:"Advanced OAuth configuration"},sidebar:"mySidebar",previous:{title:"Setting up multiple OAuth profiles",permalink:"/docs/api-authentication/oauth2/multiple-oauth-profiles"},next:{title:"Link a variable to an authentication",permalink:"/docs/api-authentication/dynamic-auth/link-variable-auth"}},s={},p=[{value:"Custom the Refresh Token",id:"custom-the-refresh-token",level:2},{value:"Custom the Access Token",id:"custom-the-access-token",level:2}],h={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"For some APIs, their implementation of OAuth wasn't very standard..."),(0,o.kt)("p",null,"You can use these advanced parameters to customize the way Meta API will interact with these APIs."),(0,o.kt)("h2",{id:"custom-the-refresh-token"},"Custom the Refresh Token"),(0,o.kt)("p",null,"Inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"securityScheme"),", you can add the ",(0,o.kt)("inlineCode",{parentName:"p"},"X-Refresh-Settings")," object to custom some properties for refreshing the access token"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'"X-Refresh-Settings": {\n    "Content-Type": "application/x-www-form-urlencoded",\n    "defaultExpireSec": 8600\n},\n')),(0,o.kt)("p",null,"Available properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Content-Type"),": change the Content-Type send with the request. If the Content-Type is set to ",(0,o.kt)("inlineCode",{parentName:"li"},"application/x-www-form-urlencoded"),", then a form will be sent automatically"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"defaultExpireSec"),": set or change the default expiration time of the refresh token if not given by the API")),(0,o.kt)("p",null,"Here is an example of Quickbooks API :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'"securitySchemes": {\n    "oauth2": {\n        "type": "oauth2",\n        "flows": {\n            "authorizationCode": {\n                "authorizationUrl": "https://appcenter.intuit.com/connect/oauth2",\n                "tokenUrl": "https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer",\n                "refreshUrl": "https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer",\n                "X-Refresh-Settings": {\n                    "Content-Type": "application/x-www-form-urlencoded"\n                },\n                "scopes": {\n                    "openid": "OpenID",\n                    "email": "email",\n                    "profile": "profile",\n                    "address": "address",\n                    "phone": "phone",\n                    "com.intuit.quickbooks.accounting": "Accounting"\n                }\n            }\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"custom-the-access-token"},"Custom the Access Token"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'"X-OAuth-Settings": {\n    "headerName": "OAuth-Token",\n    "tokenFormat": "$TOKEN"\n}\n')),(0,o.kt)("p",null,"Available properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"headerName"),": change header name for sending the access token. By default, it's ",(0,o.kt)("inlineCode",{parentName:"li"},"Authorization"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tokenFormat"),": change the token format. You must write ",(0,o.kt)("inlineCode",{parentName:"li"},"$TOKEN")," inside the string and this will be replaced by the real token. Ex: ",(0,o.kt)("inlineCode",{parentName:"li"},"JWT $TOKEN"),".")),(0,o.kt)("p",null,"Here is an example with SugarCRM API:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'"securitySchemes": {\n    "OAuth2": {\n        "type": "oauth2",\n        "flows": {\n            "password": {\n                "tokenUrl": "https://exaprint.platform.inetprocess.com/rest/v11/oauth2/token",\n                "scopes": {},\n                "refreshUrl": "https://exaprint.platform.inetprocess.com/rest/v11/oauth2/token",\n                "X-OAuth-Settings": {\n                    "headerName": "OAuth-Token",\n                    "tokenFormat": "$TOKEN"\n                }\n            }\n        }\n    }\n}\n')))}m.isMDXComponent=!0}}]);