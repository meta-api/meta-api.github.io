"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[4852],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?o.createElement(f,i(i({ref:t},u),{},{components:n})):o.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5386:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],l={id:"lexical",title:"Lexical on Meta-API"},c=void 0,s={unversionedId:"introduction/lexical",id:"introduction/lexical",title:"Lexical on Meta-API",description:"Meta-API introduces new concepts like Spells, connectors or even Grimoire. Find out what is behind those terms.",source:"@site/docs/introduction/2-lexical.md",sourceDirName:"introduction",slug:"/introduction/lexical",permalink:"/docs/introduction/lexical",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"lexical",title:"Lexical on Meta-API"},sidebar:"mySidebar",previous:{title:"What is Meta API?",permalink:"/docs/introduction/what-is-meta-api"},next:{title:"Automation / Spell",permalink:"/docs/category/automation--spell"}},u={},p=[{value:"What is a Spell?",id:"what-is-a-spell",level:2},{value:"What is an API?",id:"what-is-an-api",level:2},{value:"What is a Connector?",id:"what-is-a-connector",level:2},{value:"What is the difference between an API and a Connector?",id:"what-is-the-difference-between-an-api-and-a-connector",level:2},{value:"What is Grimoire?",id:"what-is-grimoire",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Meta-API introduces new concepts like Spells, connectors or even Grimoire. Find out what is behind those terms."),(0,a.kt)("h2",{id:"what-is-a-spell"},"What is a Spell?"),(0,a.kt)("p",null,"A Spell is a mix between connectors and your code, put together to automate actions and data exchange between APIs."),(0,a.kt)("p",null,"They are the consecration of our vision: making two APIs talking between each other and having the power to automate it."),(0,a.kt)("p",null,"Once done, a Spell is exposed through an API endpoint, its own API. We can also call a Spell a meta API \ud83d\ude09"),(0,a.kt)("p",null,"Below subcomponents of a Spell:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Code editor: a full JavaScript and Typescript editor for writing Spells and mix your own algorithms with auto-generated code."),(0,a.kt)("li",{parentName:"ul"},"Dependencies: use NPM to add any JS/TS library inside a Spell"),(0,a.kt)("li",{parentName:"ul"},"Releases: execute live development inside the web editor and create new release to freeze your code and deploy it on different environment. A rollback is possible to switch back to previous version and change it in a snap"),(0,a.kt)("li",{parentName:"ul"},"Logs: all requests are logged and accessible through a dedicated interface, filtering them by status, environment and Spells.")),(0,a.kt)("h2",{id:"what-is-an-api"},"What is an API?"),(0,a.kt)("p",null,"An API is a interface dedicated for machine to machine communication."),(0,a.kt)("p",null,"The aim of an API is to help developers access to remote data or trigger remote action on a server for example. Thanks to APIs, your smartphone can retrieve weather information from OpenWeatherMap for example."),(0,a.kt)("p",null,"These APIs need to be simple and accessible for developers."),(0,a.kt)("h2",{id:"what-is-a-connector"},"What is a Connector?"),(0,a.kt)("p",null,"A connector is an API's endpoint implemented inside Meta API solution."),(0,a.kt)("p",null,"Connector's management is and will be more and more automated with new features to give you a better productivity when using APIs."),(0,a.kt)("p",null,"Whenever an API is added, all the endpoints are scanned and connectors are created for them."),(0,a.kt)("p",null,"A connector include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A specific interface for an easier use in the platform"),(0,a.kt)("li",{parentName:"ul"},"An enforcement on parameters and response schema"),(0,a.kt)("li",{parentName:"ul"},"On schedule specific monitoring during execution to verify the update of the connector"),(0,a.kt)("li",{parentName:"ul"},"A typed response schema for code creation and edition based on connector's response.")),(0,a.kt)("h2",{id:"what-is-the-difference-between-an-api-and-a-connector"},"What is the difference between an API and a Connector?"),(0,a.kt)("p",null,"An API is a collection of endpoints exposed under the same servers."),(0,a.kt)("p",null,"A connector is, in Meta-API context, the implementation of an endpoint inside the platform."),(0,a.kt)("p",null,"A lot of features are implemented whenever our team or users are adding a connector."),(0,a.kt)("p",null,"It is the link between your Spell and any API you want to use."),(0,a.kt)("p",null,"Our connectors are loaded with a lot of technology such as automatic monitoring, generated interfaces and change detection."),(0,a.kt)("h2",{id:"what-is-grimoire"},"What is Grimoire?"),(0,a.kt)("p",null,"Grimoire is the name of our development environment. When developing a new Spell, we will launch a new Grimoire for your team. This gives you real time development on our platform and allows you to develop as if you were in production."),(0,a.kt)("p",null,"Our development environment is limited in time, after 20 minutes of inactivity it will shut down automatically. You'll have to relaunch it by saving a Spell and starting to develop again."))}m.isMDXComponent=!0}}]);