"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[412],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,y=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(y,s(s({ref:t},p),{},{components:n})):a.createElement(y,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var l=2;l<o;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},844:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),s=["components"],c={id:"connect-to-databases",title:"Connect your Spell to databases"},i=void 0,l={unversionedId:"connectors/connect-to-databases",id:"connectors/connect-to-databases",title:"Connect your Spell to databases",description:"If you want to connect your Spell to databases, you can use our Dependencies Manager to do it.",source:"@site/docs/connectors/3-connect-to-databases.md",sourceDirName:"connectors",slug:"/connectors/connect-to-databases",permalink:"/docs/connectors/connect-to-databases",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"connect-to-databases",title:"Connect your Spell to databases"},sidebar:"mySidebar",previous:{title:"Use a Spell's variable in a Connector",permalink:"/docs/connectors/use-variable-spell"},next:{title:"Configure Connectors' authentication",permalink:"/docs/authentication/configure-authentication"}},p={},u=[{value:"Database engines",id:"database-engines",level:3},{value:"ORM",id:"orm",level:3},{value:"Example with knex",id:"example-with-knex",level:3},{value:"Example with mysql package",id:"example-with-mysql-package",level:3},{value:"Static IP address",id:"static-ip-address",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you want to connect your Spell to databases, you can use our ",(0,o.kt)("a",{parentName:"p",href:"/docs/spell-interface/editor-overview#dependencies"},"Dependencies Manager")," to do it."),(0,o.kt)("p",null,"Here are some selected packages for the most common databases"),(0,o.kt)("h3",{id:"database-engines"},"Database engines"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"MySQL: ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/mysql"},"mysql")),(0,o.kt)("li",{parentName:"ul"},"MSSQL: ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/mssql"},"mssql")),(0,o.kt)("li",{parentName:"ul"},"MongoDB: ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/mongodb"},"mongodb")),(0,o.kt)("li",{parentName:"ul"},"PostgreSQL: ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/pg"},"pg"))),(0,o.kt)("h3",{id:"orm"},"ORM"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/knex"},"knex"),": to make manipulation of SQL database very easy. Don't forget to close the connection when your Spell is finished ;)")),(0,o.kt)("h3",{id:"example-with-knex"},"Example with knex"),(0,o.kt)("p",null,"If you want to use ",(0,o.kt)("inlineCode",{parentName:"p"},"knex")," inside a Spell, you should add these dependencies to your Spell:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"knex"),(0,o.kt)("li",{parentName:"ul"},"mysql or mssql or other database engine supported by knex")),(0,o.kt)("p",null,"Here is a template to interact with the database:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'//Connection to database\nconst db = knex({\n  client: "mysql",\n  version: "5.7",\n  connection: {\n    host: "myserver.test.com",\n    port: 3306,\n    user: "admin",\n    password: "password",\n    database: "mydb",\n  },\n});\n\ntry {\n  //Pushing new data to database\n  //This data can be a array of object, matching with database columns\n  await db("databaseName").insert(data);\n} catch (error) {\n  console.error(error);\n} finally {\n  //Disconnect the database at the end\n  db.destroy();\n}\n')),(0,o.kt)("p",null,"We recommend using a ",(0,o.kt)("inlineCode",{parentName:"p"},"try/catch")," to catch potential database error (like unmatching columns) and a ",(0,o.kt)("inlineCode",{parentName:"p"},"finally")," to ensure the disconnection to the database."),(0,o.kt)("h3",{id:"example-with-mysql-package"},"Example with mysql package"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mysql")," package doesn't support async function, but you can have a function with a promise to manage it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const connection = mysql.createConnection({\n  host: "mysql.test.com",\n  port: 3306,\n  user: "user",\n  password: "password",\n  database: "myDatabase",\n});\n\nconst executeQuery = (sql) => {\n  return new Promise((resolve, reject) => {\n    connection.query(sql, (error, results) => {\n      if (error) {\n        return reject(error);\n      }\n      return resolve(results);\n    });\n  });\n};\n\nawait executeQuery("INSERT xxx INTO yyy");\n\nconnection.end();\n')),(0,o.kt)("h2",{id:"static-ip-address"},"Static IP address"),(0,o.kt)("p",null,"For security reason, you may want to have a static IP for reaching your database (in order to filter access). It's possible by contacting the Meta API team inside the chat support."))}m.isMDXComponent=!0}}]);