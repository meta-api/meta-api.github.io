"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[6553],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),g=n,m=d["".concat(l,".").concat(g)]||d[g]||p[g]||a;return r?o.createElement(m,i(i({ref:t},u),{},{components:r})):o.createElement(m,i({ref:t},u))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7481:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],s={id:"how-does-work-meta-storage",title:"How does Meta Storage work?"},l=void 0,c={unversionedId:"spell/using-meta-storage/how-does-work-meta-storage",id:"spell/using-meta-storage/how-does-work-meta-storage",title:"How does Meta Storage work?",description:"Description of Meta Storage",source:"@site/docs/spell/using-meta-storage/1-how-does-work-meta-storage.md",sourceDirName:"spell/using-meta-storage",slug:"/spell/using-meta-storage/how-does-work-meta-storage",permalink:"/docs/spell/using-meta-storage/how-does-work-meta-storage",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"how-does-work-meta-storage",title:"How does Meta Storage work?"},sidebar:"mySidebar",previous:{title:"Using Meta Storage",permalink:"/docs/category/using-meta-storage"},next:{title:"Retrieve a value",permalink:"/docs/spell/using-meta-storage/retrieve-value"}},u={},p=[{value:"Description of Meta Storage",id:"description-of-meta-storage",level:2},{value:"See the content of your storage",id:"see-the-content-of-your-storage",level:2}],d={toc:p};function g(e){var t=e.components,s=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"description-of-meta-storage"},"Description of Meta Storage"),(0,a.kt)("p",null,"Meta Storage is a key/value database integrated inside your Spells. You can set, retrieve and share values between Spells and executions.\nIt is design like the web browser API ",(0,a.kt)("inlineCode",{parentName:"p"},"localStorage")," where you can ",(0,a.kt)("inlineCode",{parentName:"p"},"store"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"update")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"delete")," key."),(0,a.kt)("p",null,"It's a great way to share data between Spells or to synchronize and keep a state between each execution."),(0,a.kt)("p",null,"For example, we love when we are synchronizing two services, like Pipedrive (a CRM) and Airtable (a spreadsheet). With Meta Storage, we can store the last synchronization date and the last ID to limit requests done to the services."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Your Meta Storage database is limited to ",(0,a.kt)("strong",{parentName:"p"},"16 MB")," of storage. If you need more storage capacity, you can use databases as API like Google Spreadsheet or Airtable (with our connectors) or use a regular ",(0,a.kt)("a",{parentName:"p",href:"/docs/advanced/sql-database/database-engines"},"MySQL / NoSQL database"),".")),(0,a.kt)("h2",{id:"see-the-content-of-your-storage"},"See the content of your storage"),(0,a.kt)("p",null,"You can see, at any time, the content of your storage here on your Spell edition page:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Meta Storage interface",src:r(8463).Z,width:"1920",height:"955"})))}g.isMDXComponent=!0},8463:function(e,t,r){t.Z=r.p+"assets/images/meta-storage-button-9ce57c0331b39b2d552b49e342b58a56.png"}}]);