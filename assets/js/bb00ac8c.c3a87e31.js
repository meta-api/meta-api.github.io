"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[8762],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return y}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(a),y=o,h=c["".concat(p,".").concat(y)]||c[y]||u[y]||l;return a?n.createElement(h,r(r({ref:t},d),{},{components:a})):n.createElement(h,r({ref:t},d))}));function y(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=a.length,r=new Array(l);r[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var s=2;s<l;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5399:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var n=a(7462),o=a(3366),l=(a(7294),a(3905)),r=["components"],i={id:"setting-payload",title:"Setting a payload for a Spell"},p=void 0,s={unversionedId:"spell/building-spell/setting-payload",id:"spell/building-spell/setting-payload",title:"Setting a payload for a Spell",description:"A Payload is a set of data sent with your request. These data are related to the endpoint you're requested.",source:"@site/docs/spell/building-spell/5-setting-payload.md",sourceDirName:"spell/building-spell",slug:"/spell/building-spell/setting-payload",permalink:"/docs/spell/building-spell/setting-payload",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"setting-payload",title:"Setting a payload for a Spell"},sidebar:"mySidebar",previous:{title:"Link variable from the code to a connector",permalink:"/docs/spell/building-spell/link-variable-from-code-connector"},next:{title:"Setting a customize return response for a Spell",permalink:"/docs/spell/building-spell/setting-return-response-spell"}},d={},u=[{value:"Set a payload manually",id:"set-a-payload-manually",level:2},{value:"Set a Payload from a webhook call",id:"set-a-payload-from-a-webhook-call",level:2},{value:"Prepare the Spell to receive the payload",id:"prepare-the-spell-to-receive-the-payload",level:3},{value:"Retrieve the Payload sent by the webhook",id:"retrieve-the-payload-sent-by-the-webhook",level:3},{value:"Update the payload in order to work with",id:"update-the-payload-in-order-to-work-with",level:3}],c={toc:u};function y(e){var t=e.components,i=(0,o.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A Payload is a set of data sent with your request. These data are related to the endpoint you're requested."),(0,l.kt)("p",null,"For example, if you want to create a new user, you'll send a request to the endpoint for user creation and set inside the payload all the user's details (name, email, etc...)."),(0,l.kt)("h2",{id:"set-a-payload-manually"},"Set a payload manually"),(0,l.kt)("p",null,"To set up a payload manually, click on the ",(0,l.kt)("strong",{parentName:"p"},"Payload")," button inside the code editor."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Set up payload",src:a(7786).Z,width:"1439",height:"899"})),(0,l.kt)("p",null,"You can next set the JSON you want to be sent."),(0,l.kt)("p",null,"This payload will be set and be sent every time you will click on the ",(0,l.kt)("strong",{parentName:"p"},"Run")," button (for development)."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Payload panel",src:a(4026).Z,width:"1437",height:"898"})),(0,l.kt)("p",null,"At the top, we give you a code snippet to use inside your Spell to retrieve the payload's content."),(0,l.kt)("h2",{id:"set-a-payload-from-a-webhook-call"},"Set a Payload from a webhook call"),(0,l.kt)("h3",{id:"prepare-the-spell-to-receive-the-payload"},"Prepare the Spell to receive the payload"),(0,l.kt)("p",null,"First, you'll need to create a new blank Spell. Each Spell has a unique URL and this URL will be the destination of a webhook."),(0,l.kt)("p",null,"Open the ",(0,l.kt)("strong",{parentName:"p"},"Payload")," and clear it (leave an empty JSON object: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}"),")."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Empty payload",src:a(3483).Z,width:"1438",height:"898"})),(0,l.kt)("p",null,"We'll now log the content of the ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," variable to know what is coming from the webhook."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Log params",src:a(2900).Z,width:"1441",height:"899"})),(0,l.kt)("p",null,"You can now retrieve the development URL by clicking on ",(0,l.kt)("strong",{parentName:"p"},"Versionning")," in the Spell details page:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Open versions menu",src:a(6879).Z,width:"1437",height:"900"})),(0,l.kt)("p",null,"and click inside the ",(0,l.kt)("strong",{parentName:"p"},"Dev")," environment. You'll see your URL and you can copy it with the default API key using the button."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Copy dev URL",src:a(6477).Z,width:"1439",height:"897"})),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," variable is always set inside your Spell."),(0,l.kt)("p",{parentName:"admonition"},"This variable contains anything sent to your Spell, using query parameters inside the URL.\nYou can also call your Spell URL with the ",(0,l.kt)("inlineCode",{parentName:"p"},"POST")," method and the ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," variable will contain the body of your request."),(0,l.kt)("p",{parentName:"admonition"},"For example, if you add these parameters ",(0,l.kt)("inlineCode",{parentName:"p"},"&firstName=Harry&lastName=Potter")," to a Spell URL (ex: ",(0,l.kt)("inlineCode",{parentName:"p"},"https://api.meta-api.io/api/spells/626c75a3123471b901ec7f71/runSync?dev=true&apikey=xxx&firstName=Harry&lastName=Potter"),"), your ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," variable will contain:"),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre"},'{\n    firstName: "Harry",\n    lastname: "Potter"\n}\n'))),(0,l.kt)("h3",{id:"retrieve-the-payload-sent-by-the-webhook"},"Retrieve the Payload sent by the webhook"),(0,l.kt)("p",null,"Now you have the URL, configure it on your favorite service and send a webhook."),(0,l.kt)("p",null,"Click on the ",(0,l.kt)("strong",{parentName:"p"},"Console")," button and you'll be able to see the content of the payload:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Params content",src:a(1289).Z,width:"1437",height:"895"})),(0,l.kt)("h3",{id:"update-the-payload-in-order-to-work-with"},"Update the payload in order to work with"),(0,l.kt)("p",null,"You can now work directly with a payload or you can copy / paste the content of the payload inside the ",(0,l.kt)("strong",{parentName:"p"},"Payload")," popup to send this content during your Spell's development."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Payload filled",src:a(3226).Z,width:"1439",height:"899"})))}y.isMDXComponent=!0},6477:function(e,t,a){t.Z=a.p+"assets/images/copy-url-dev-bd2b6158ce27bf44d512d76611687be3.jpg"},3483:function(e,t,a){t.Z=a.p+"assets/images/empty-payload-b6300387989ea9821a3f186c9837f88b.jpg"},2900:function(e,t,a){t.Z=a.p+"assets/images/log-params-0c8c42ed5980a3750ef2cfde3061198c.jpg"},6879:function(e,t,a){t.Z=a.p+"assets/images/open-versions-3aec2655188e782adc389eefc9978e8a.jpg"},1289:function(e,t,a){t.Z=a.p+"assets/images/params-content-410497bfceb7f4501f91850e9ad4a53c.jpg"},3226:function(e,t,a){t.Z=a.p+"assets/images/payload-filled-69be6ce75f2377b2f8c887410d50239c.jpg"},4026:function(e,t,a){t.Z=a.p+"assets/images/payload-popup-eb90b3819612c3d0336cd4ca3a28bb44.jpg"},7786:function(e,t,a){t.Z=a.p+"assets/images/set-up-payload-73eed2ff0ded3cbd3a60c76f6ff0c128.jpg"}}]);