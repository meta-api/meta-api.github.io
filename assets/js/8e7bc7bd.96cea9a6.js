"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[4523],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(o,".").concat(d)]||m[d]||p[d]||i;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7170:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),s=["components"],l={id:"rate-limiting-spell",title:"Implement a rate limiting on Spells"},o=void 0,c={unversionedId:"advanced/rate-limiting-spell",id:"advanced/rate-limiting-spell",title:"Implement a rate limiting on Spells",description:"You may want to restrain your users accessing your Spell, especially if they are exposed publicly.",source:"@site/docs/advanced/rate-limiting-spell.md",sourceDirName:"advanced",slug:"/advanced/rate-limiting-spell",permalink:"/docs/advanced/rate-limiting-spell",draft:!1,tags:[],version:"current",frontMatter:{id:"rate-limiting-spell",title:"Implement a rate limiting on Spells"},sidebar:"mySidebar",previous:{title:"Use an FTP server inside a Spell",permalink:"/docs/advanced/ftp-server"},next:{title:"User & company account management",permalink:"/docs/category/user--company-account-management"}},u={},p=[{value:"Implement a rate limiting based on IP address",id:"implement-a-rate-limiting-based-on-ip-address",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You may want to restrain your users accessing your Spell, especially if they are exposed publicly."),(0,i.kt)("h2",{id:"implement-a-rate-limiting-based-on-ip-address"},"Implement a rate limiting based on IP address"),(0,i.kt)("p",null,"This code will allow you to implement a rate limiting based on user's IP address with a limit of requests every day (understand for 24h starting at the first request)."),(0,i.kt)("p",null,"You can customize the number of requests allowed every day by changing the ",(0,i.kt)("inlineCode",{parentName:"p"},"REQUESTS_PER_DAY")," variable's value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'//Code to create a rate limiting by IP\nconst REQUESTS_PER_DAY = 30;\nconst userIp = params.headers["x-forwarded-for"];\n\nconst limitedIps = (await metaStorage.get("rate_limiting")) || {};\n\nif (limitedIps[userIp]) {\n  //Reset limitation\n  if (dayjs().diff(limitedIps[userIp].firstDate, "hours") > 24) {\n    limitedIps[userIp] = {\n      firstDate: dayjs().toDate(),\n      requests: 1,\n    };\n  } else if (limitedIps[userIp].requests > REQUESTS_PER_DAY) {\n    //User has already consumed all allow requests\n    return {\n      success: false,\n      message: "You have already exceeded all your requests for the day",\n    };\n  } else {\n    //Increment requests\n    limitedIps[userIp].requests++;\n  }\n} else {\n  limitedIps[userIp] = {\n    firstDate: dayjs().toDate(),\n    requests: 1,\n  };\n}\n\nawait metaStorage.set("rate_limiting", limitedIps);\n')))}d.isMDXComponent=!0}}]);