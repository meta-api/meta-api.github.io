"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[5416],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=s(t),d=a,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||o;return t?r.createElement(m,l(l({ref:n},p),{},{components:t})):r.createElement(m,l({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=f;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6179:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={id:"output-file",title:"Output file from Spell response"},c=void 0,s={unversionedId:"advanced/files-spell/output-file",id:"advanced/files-spell/output-file",title:"Output file from Spell response",description:"You can output a file from a Spell to interact directly with user and propose them to download it.",source:"@site/docs/advanced/files-spell/3-output-file.md",sourceDirName:"advanced/files-spell",slug:"/advanced/files-spell/output-file",permalink:"/docs/advanced/files-spell/output-file",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"output-file",title:"Output file from Spell response"},sidebar:"mySidebar",previous:{title:"Read and save temporary files",permalink:"/docs/advanced/files-spell/read-save-file"},next:{title:"Use a connector for graphQL",permalink:"/docs/advanced/graphql-connection/graphql-connector"}},p={},u=[],f={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can output a file from a Spell to interact directly with user and propose them to download it."),(0,o.kt)("p",null,"You have a special object ",(0,o.kt)("inlineCode",{parentName:"p"},"_file")," that you can return from a Spell:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'return {\n    _file: {\n        filename: "test.csv" //You can choose here the filename of your file. This filename will be proposed to the user when he will download it\n        data: new Buffer.from(csv) //data must be a Buffer\n    }\n}\n')),(0,o.kt)("p",null,"Here is a full example of a Spell with output a CSV: (we are using ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/json2csv"},"json2csv parser lib")," to convert a JSON to a CSV)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{20-23}","{20-23}":!0},'const someData = [\n  {\n    Firstname: "John",\n    Lastname: "Doe",\n    Language: "English",\n    Age: 31,\n  },\n  {\n    Firstname: "Alain",\n    Lastname: "Terrieur",\n    Language: "French",\n    Age: 32,\n  },\n];\n\nconst json2csvParser = new json2csv.Parser();\nconst csv = json2csvParser.parse(someData);\n\nreturn {\n  _file: {\n    filename: "people.csv",\n    data: new Buffer.from(csv),\n  },\n};\n')),(0,o.kt)("p",null,"Here is the output inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"people.csv")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'"Firstname","Lastname","Language","Age"\n"John","Doe","English",31\n"Alain","Terrieur","French",32\n')))}d.isMDXComponent=!0}}]);