"use strict";(self.webpackChunkmeta_api_docs=self.webpackChunkmeta_api_docs||[]).push([[1002],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return m}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,g=d["".concat(p,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(g,o(o({ref:t},i),{},{components:n})):a.createElement(g,o({ref:t},i))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7977:function(e,t,n){n.r(t),n.d(t,{assets:function(){return i},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),o=["components"],s={id:"update-cells-google-spreadsheet",title:"Multiple ways to update cells in a Google Spreadsheet"},p=void 0,u={unversionedId:"examples/update-cells-google-spreadsheet",id:"examples/update-cells-google-spreadsheet",title:"Multiple ways to update cells in a Google Spreadsheet",description:"Updating cells using Google Spreadsheet API can be tricky.",source:"@site/docs/examples/5-update-cells-google-spreadsheet.md",sourceDirName:"examples",slug:"/examples/update-cells-google-spreadsheet",permalink:"/docs/examples/update-cells-google-spreadsheet",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"update-cells-google-spreadsheet",title:"Multiple ways to update cells in a Google Spreadsheet"},sidebar:"mySidebar",previous:{title:"Video tutorial: Uptime Robot x Jira",permalink:"/docs/examples/video-tuto-uptime-robot-jira"}},i={},c=[{value:"Example 1: Update only one cell",id:"example-1-update-only-one-cell",level:2},{value:"Example 2: Update multiple cells on the same range",id:"example-2-update-multiple-cells-on-the-same-range",level:2},{value:"Example 3: update multiple range with multiple values in one request",id:"example-3-update-multiple-range-with-multiple-values-in-one-request",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Updating cells using Google Spreadsheet API can be tricky.",(0,r.kt)("br",{parentName:"p"}),"\n","Here some real case examples with code coming from a Spell to show you multiple ways to update a Google Spreadsheet document"),(0,r.kt)("h2",{id:"example-1-update-only-one-cell"},"Example 1: Update only one cell"),(0,r.kt)("p",null,"To update only one range, use ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT /v4/spreadsheets/{spreadsheetId}/values/{range}")),(0,r.kt)("p",null,"You can define the range as a variable or directly inside the connector (as a value)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const range = `Sheet1!C1`;\nconst updateOneCell: Dataputvspreadsheetsspreadsheetidvaluesrange = await connectorService.config("62d9c85b6b45030961d86ba2", {\n    body: {\n        values: [\n            ["test"]\n        ]\n    } as Bodyputvspreadsheetsspreadsheetidvaluesrange\n});\n')),(0,r.kt)("h2",{id:"example-2-update-multiple-cells-on-the-same-range"},"Example 2: Update multiple cells on the same range"),(0,r.kt)("p",null,"To update multiple cells on the same range, use PUT /v4/spreadsheets/{spreadsheetId}/values/{range}"),(0,r.kt)("p",null,"In this case, we'll update A1, B2, C2 and C4. So we'll use the range ",(0,r.kt)("inlineCode",{parentName:"p"},"A1:C4")," to include all the cells."),(0,r.kt)("p",null,"You can represent this range as an array of array, like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"[\n  [A1, B1, C1],\n  [A2, B2, C2],\n  [A3, B3, C3],\n  [A4, B4, C4],\n];\n")),(0,r.kt)("p",null,"So the update using a connector is now pretty easy and will look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const range = `Sheet1!A1:C4`;\nconst updateMultipleCells: Dataputvspreadsheetsspreadsheetidvaluesrange = await connectorService.config("62d9ca706b45030961d86d59", {\n    body: {\n        values: [\n            ["A1 cell", ,],\n            [, "B2 cell", "C2 cell"],\n            [],\n            [, , "C4 cell"]\n        ]\n    } as Bodyputvspreadsheetsspreadsheetidvaluesrange\n});\n')),(0,r.kt)("p",null,"If we left the value ",(0,r.kt)("em",{parentName:"p"},"empty"),", that'll leave the cell untouched. If we want to clear an existing value, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},'""')," as a value."),(0,r.kt)("h2",{id:"example-3-update-multiple-range-with-multiple-values-in-one-request"},"Example 3: update multiple range with multiple values in one request"),(0,r.kt)("p",null,"Use for that ",(0,r.kt)("inlineCode",{parentName:"p"},"POST /v4/spreadsheets/{spreadsheetId}/values:batchUpdate")),(0,r.kt)("p",null,"Same principle, but we will use data object with inside multiple range and multiple values"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const googleSpreadsheetResult: Datapostvspreadsheetsspreadsheetidvaluesbatchupdate = await connectorService.config("62d9cd695dda770c112f6c77", {\n    body: {\n        "valueInputOption": "RAW",\n        "data": [\n            {\n                "range": "Sheet1!C1",\n                "values": [\n                    ["test 2"]\n                ]\n            },\n            {\n                "range": "Sheet1!A1:C4",\n                "values": [\n                    ["A1 cell 2", ,],\n                    [, "B2 cell 2", "C2 cell 2"],\n                    [],\n                    [, , "C4 cell 2"]\n                ]\n            }\n        ],\n    }\n});\n')))}m.isMDXComponent=!0}}]);